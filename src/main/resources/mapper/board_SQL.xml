<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<!-- 메인 공지사항 최근글 Notice=1 -->
	<select id="selectNoticeList" parameterType="hashmap"
		resultType="hashmap"><![CDATA[
SELECT BOARD.BOARD_NO,BOARD.IDENTI_TYPE,USERS.NICK_NAME,USERS.ADMIN,BOARD.TITLE,TO_CHAR(BOARD.BOARD_DATE,'yy/MM/dd(hh24:MI)') "BOARD_DATE" FROM BOARD INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO WHERE BOARD.IDENTI_TYPE= '1' AND BOARD.REPORT_COUNT < '20' AND BOARD.DEL_GB = 'N' AND ROWNUM <=3 ORDER BY BOARD_DATE DESC
]]></select>
	<!-- 메인 QnA 인기글 QnA=2 -->
	<select id="selectQnaBestList" parameterType="hashmap"
		resultType="hashmap"><![CDATA[
SELECT BOARD.BOARD_NO,BOARD.IDENTI_TYPE,USERS.NICK_NAME,BOARD.TITLE,TO_CHAR(BOARD.BOARD_DATE,'YY/MM/DD(hh24:MI)') "BOARD_DATE",BOARD.RECOMMEND_COUNT FROM BOARD INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO WHERE BOARD.IDENTI_TYPE= '2' AND BOARD.DEL_GB = 'N' AND RECOMMEND_COUNT >= '0' AND BOARD.REPORT_COUNT < '20' AND ROWNUM <=3 ORDER BY BOARD_DATE DESC
]]></select>
	<!-- 메인 자유게시판 인기글 FreeBoard=3 -->
	<select id="selectFreeBestList" parameterType="hashmap"
		resultType="hashmap"><![CDATA[
SELECT BOARD.BOARD_NO,BOARD.IDENTI_TYPE,USERS.NICK_NAME,BOARD.TITLE,TO_CHAR(BOARD.BOARD_DATE,'YY/MM/DD(hh24:MI)') "BOARD_DATE",BOARD.RECOMMEND_COUNT FROM BOARD INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO WHERE BOARD.IDENTI_TYPE= '3' AND BOARD.DEL_GB = 'N' AND RECOMMEND_COUNT >= '0' AND BOARD.REPORT_COUNT < '20' AND ROWNUM <=3 ORDER BY BOARD_DATE DESC
]]></select>
<select id="selectBoardList" parameterType="hashmap" resultType="hashmap">
<include refid="common.pagingPre"/>
<![CDATA[
SELECT A.BOARD_NO
	 , A.NICK_NAME
	 , A.TITLE
     , A.CONTEXT
     , A.READ_COUNT
     , A.BOARD_DATE
     , NVL(A.REPLY_COUNT, 0) AS REPLY_COUNT
     , A.IDENTI_TYPE
     , A.RECOMMEND_COUNT
	 , ROWNUM
FROM(SELECT BOARD.BOARD_NO
     , USERS.NICK_NAME
     , BOARD.TITLE
     , BOARD.CONTEXT
     , BOARD.READ_COUNT
     , TO_CHAR(BOARD.BOARD_DATE, 'YY/MM/DD(hh24:MI)') "BOARD_DATE"
     , TEST.REPLY_COUNT
     , BOARD.IDENTI_TYPE
     , BOARD.RECOMMEND_COUNT
  FROM BOARD 
 INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO
 LEFT OUTER JOIN (SELECT BOARD.BOARD_NO
 				  , COUNT(REPLY.BOARD_NO) AS REPLY_COUNT
               FROM BOARD
               LEFT OUTER JOIN REPLY ON BOARD.BOARD_NO = REPLY.BOARD_NO 
              WHERE BOARD.IDENTI_TYPE = #{IDENTI_TYPE} 
                AND BOARD.DEL_GB = 'N'
                AND (REPLY.DEL_GB = 'N' OR REPLY.DEL_GB IS NULL)
              GROUP BY BOARD.BOARD_NO) TEST ON BOARD.BOARD_NO = TEST.BOARD_NO
 WHERE BOARD.IDENTI_TYPE= #{IDENTI_TYPE} 
   AND BOARD.DEL_GB = 'N' 
   AND BOARD.REPORT_COUNT<'20'
   ]]>
   	<!-- 키워드 -->
   		<choose>
			<when test='SEARCH_TYPE == "TITLE"'>
			<![CDATA[
				AND BOARD.TITLE LIKE '%'||#{KEYWORD}||'%' 
			]]>
			</when>
			<when test='SEARCH_TYPE == "CONTEXT"'>
			<![CDATA[
				AND BOARD.CONTEXT LIKE '%'||#{KEYWORD}||'%'
			]]>
			</when>
			<when test='SEARCH_TYPE == "NICKNAME"'>
			<![CDATA[
				AND USERS.NICK_NAME LIKE '%'||#{KEYWORD}||'%' 
			]]>
			</when>
			<when test='SEARCH_TYPE == "T+C"'>
			<![CDATA[
				AND BOARD.TITLE LIKE '%'||#{KEYWORD}||'%' OR BOARD.CONTEXT LIKE '%'||#{KEYWORD}||'%' 
			]]>
			</when>
			<otherwise>
			<![CDATA[
				 
			]]>
			</otherwise>
		</choose>		
	<![CDATA[
 ORDER BY
]]>
		<choose>
			<when test='ORDER_TYPE == "REPLY"'>
			<![CDATA[
				TEST.REPLY_COUNT DESC NULLS LAST 
			]]>
			</when>
			<when test='ORDER_TYPE == "READ"'>
			<![CDATA[
				BOARD.READ_COUNT DESC
			]]>
			</when>
			<when test='ORDER_TYPE == "RECOMMEND"'>
			<![CDATA[
				BOARD.RECOMMEND_COUNT DESC 
			]]>
			</when>
			<otherwise>
			<![CDATA[
				BOARD.BOARD_DATE DESC 
			]]>
			</otherwise>
		</choose>
	<![CDATA[
) A	
]]>
	<include refid="common.pagingPost"/>
	</select>

	<!-- 게시글 숫자 -->
<select id="countborad" parameterType="hashmap" resultType="_int">

<![CDATA[
SELECT COUNT(*) FROM BOARD WHERE IDENTI_TYPE= #{IDENTI_TYPE} AND DEL_GB='N' AND REPORT_COUNT<20
]]>
   
</select>

	<!-- 검색 게시글 숫자 -->
<select id="countsearchborad" parameterType="hashmap" resultType="_int">
<![CDATA[
SELECT COUNT(*) FROM BOARD WHERE IDENTI_TYPE= #{IDENTI_TYPE}
]]>
   		 <!-- 키워드 -->
			<if test='SEARCH_TYPE == "TITLE"'>
				<![CDATA[
					AND BOARD.TITLE LIKE '%'||#{KEYWORD}||'%'
				]]>
			</if>
			<if test='SEARCH_TYPE == "CONTEXT"'>
				<![CDATA[
					AND BOARD.CONTEXT LIKE '%'||#{KEYWORD}||'%'
				]]>
			</if>
			<if test='SEARCH_TYPE == "NICKNAME"'>
				<![CDATA[
					AND USERS.NICK_NAME LIKE '%'||#{KEYWORD}||'%'
				]]>
			</if>
			<if test='SEARCH_TYPE == "T+C"'>
				<![CDATA[
					AND BOARD.TITLE LIKE '%'||#{KEYWORD}||'%' OR BOARD.CONTEXT LIKE '%'||#{KEYWORD}||'%'
				]]>
			</if>
		
		<![CDATA[
 ORDER BY BOARD.BOARD_DATE DESC) A
]]>
</select>

<!-- 게시글 검색-->
<select id="searchBoard" parameterType="hashmap" resultType="hashmap">
<![CDATA[
SELECT A.BOARD_NO
	 , A.NICK_NAME
	 , A.TITLE
     , A.CONTEXT
     , A.READ_COUNT
     , A.BOARD_DATE
     , NVL(A.REPLY_COUNT, 0) AS REPLY_COUNT
     , A.IDENTI_TYPE
     , A.RECOMMEND_COUNT
	 , ROWNUM
FROM(SELECT BOARD.BOARD_NO
     , USERS.NICK_NAME
     , BOARD.TITLE
     , BOARD.CONTEXT
     , BOARD.READ_COUNT
     , TO_CHAR(BOARD.BOARD_DATE, 'YY/MM/DD(hh24:MI)') "BOARD_DATE"
     , TEST.REPLY_COUNT
     , BOARD.IDENTI_TYPE
     , BOARD.RECOMMEND_COUNT
  FROM BOARD 
 INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO
 LEFT OUTER JOIN (SELECT BOARD.BOARD_NO
 				  , COUNT(REPLY.BOARD_NO) AS REPLY_COUNT
               FROM BOARD
               LEFT OUTER JOIN REPLY ON BOARD.BOARD_NO = REPLY.BOARD_NO 
              WHERE BOARD.IDENTI_TYPE = #{IDENTI_TYPE} 
                AND BOARD.DEL_GB = 'N'
                AND (REPLY.DEL_GB = 'N' OR REPLY.DEL_GB IS NULL)
              GROUP BY BOARD.BOARD_NO) TEST ON BOARD.BOARD_NO = TEST.BOARD_NO
 WHERE BOARD.IDENTI_TYPE= #{IDENTI_TYPE} 
   AND BOARD.DEL_GB = 'N' 
   AND BOARD.REPORT_COUNT<'20'
   ]]>
   	<!-- 키워드 -->
   		<choose>
			<when test='SEARCH_TYPE == "TITLE"'>
			<![CDATA[
				AND BOARD.TITLE LIKE '%'||#{KEYWORD}||'%' 
			]]>
			</when>
			<when test='SEARCH_TYPE == "CONTEXT"'>
			<![CDATA[
				AND BOARD.CONTEXT LIKE '%'||#{KEYWORD}||'%'
			]]>
			</when>
			<when test='SEARCH_TYPE == "NICKNAME"'>
			<![CDATA[
				AND USERS.NICK_NAME LIKE '%'||#{KEYWORD}||'%' 
			]]>
			</when>
			<when test='SEARCH_TYPE == "T+C"'>
			<![CDATA[
				AND BOARD.TITLE LIKE '%'||#{KEYWORD}||'%' OR BOARD.CONTEXT LIKE '%'||#{KEYWORD}||'%' 
			]]>
			</when>
			<otherwise>
			<![CDATA[
				 
			]]>
			</otherwise>
		</choose>		
	<![CDATA[
 ORDER BY
]]>
		<choose>
			<when test='ORDER_TYPE == "REPLY"'>
			<![CDATA[
				TEST.REPLY_COUNT DESC NULLS LAST
			]]>
			</when>
			<when test='ORDER_TYPE == "READ"'>
			<![CDATA[
				BOARD.READ_COUNT DESC
			]]>
			</when>
			<when test='ORDER_TYPE == "RECOMMEND"'>
			<![CDATA[
				BOARD.RECOMMEND_COUNT DESC 
			]]>
			</when>
			<otherwise>
			<![CDATA[
				BOARD.BOARD_DATE DESC 
			]]>
			</otherwise>
		</choose>
	<![CDATA[
) A	
]]>
</select>

<!-- 게시글 상세보기 -->
<select id="selectBoardDetail" parameterType="hashmap" resultType="hashmap"><![CDATA[
SELECT BOARD.BOARD_NO,BOARD.IDENTI_TYPE,USERS.NICK_NAME,BOARD.TITLE,BOARD.USER_NO,BOARD.CONTEXT,TO_CHAR(BOARD.BOARD_DATE,'YY/MM/DD(hh24:MI)') "BOARD_DATE",BOARD.BOARD_NO,BOARD.READ_COUNT,BOARD.RECOMMEND_COUNT,BOARD.REPORT_COUNT FROM BOARD INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO WHERE BOARD.BOARD_NO = #{BOARD_NO}
]]></select>

<!-- 조회수 증가 -->
<update id="updateHitCnt" parameterType="hashmap"><![CDATA[
UPDATE BOARD SET READ_COUNT = READ_COUNT + 1 WHERE BOARD_NO=#{BOARD_NO}
]]></update>
	<!-- 삭제글 리스트 -->
	<select id="selectDeleteList" parameterType="hashmap"
		resultType="hashmap"><![CDATA[
SELECT BOARD.BOARD_NO,USERS.NICK_NAME,BOARD.TITLE,BOARD.READ_COUNT,TO_CHAR(BOARD.BOARD_DATE,'YY/MM/DD(hh24:MI)') "BOARD_DATE",ROWNUM FROM BOARD INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO WHERE BOARD.DEL_GB = 'Y'
]]></select>
<!-- 삭제글 수 -->
<select id="countDeleteList" parameterType="hashmap" resultType="_int">
SELECT COUNT(*) FROM BOARD WHERE DEL_GB = 'Y'
</select>
	<!-- 삭제글 복구 -->
	<update id="returnDelete" parameterType="hashmap"><![CDATA[
UPDATE BOARD SET DEL_GB = 'N' WHERE BOARD_NO = #{BOARD_NO}
]]></update>
	<!-- 신고글 리스트 -->
	<select id="selectReportList" parameterType="hashmap"
		resultType="hashmap"><![CDATA[
SELECT BOARD.BOARD_NO,BOARD.REPORT_COUNT,USERS.NICK_NAME,BOARD.TITLE,BOARD.READ_COUNT,TO_CHAR(BOARD.BOARD_DATE,'YY/MM/DD(hh24:MI)') "BOARD_DATE",ROWNUM FROM BOARD INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO WHERE BOARD.DEL_GB = 'N' AND BOARD.REPORT_COUNT >= '20'
]]></select>
<!-- 신고글 갯수 -->
<select id="countReportList" parameterType="hashmap" resultType="_int">
SELECT count(*) FROM BOARD  WHERE DEL_GB = 'N' AND REPORT_COUNT >= '20'
</select>
	<!-- 신고글 복원 -->
	<update id="returnReport" parameterType="hashmap"><![CDATA[
UPDATE BOARD SET REPORT_COUNT = 0 WHERE BOARD_NO = #{BOARD_NO}
]]></update>
	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="hashmap"><![CDATA[
UPDATE BOARD SET TITLE= #{TITLE} ,CONTEXT = #{CONTEXT}, IDENTI_TYPE =#{IDENTI_TYPE} WHERE BOARD_NO = #{BOARD_NO}
]]></update>
	<!-- 게시글 신고 -->
	<update id="reportBoard" parameterType="hashmap"><![CDATA[
UPDATE BOARD SET REPORT_COUNT = REPORT_COUNT + 1 WHERE BOARD_NO = #{BOARD_NO}
]]></update>
	<!-- 게시글 종아요 -->
	<update id="recommendBoard" parameterType="hashmap"><![CDATA[
UPDATE BOARD SET RECOMMEND_COUNT = RECOMMEND_COUNT + 1 WHERE BOARD_NO = #{BOARD_NO}
]]></update>
	<!-- 게시글 삭제 -->
	<update id="deleteBoard" parameterType="hashmap"><![CDATA[
UPDATE BOARD SET DEL_GB='Y' WHERE BOARD_NO = #{BOARD_NO}
]]></update>

	<!-- 답글수 -->
	<select id="commentCount" parameterType="hashmap"
		resultType="int"><![CDATA[
SELECT COUNT(*) AS COUNT FROM REPLY WHERE BOARD_NO=#{BOARD_NO} AND DEL_GB='N'
]]></select>
<!-- 게시글 작성 -->
<insert id="insertBoard" parameterType="hashmap">
<selectKey keyProperty="BOARD_NO" resultType="string" order="BEFORE">
		SELECT BOARD_SEQ.NEXTVAL FROM DUAL
</selectKey>
<![CDATA[
INSERT INTO BOARD (BOARD_NO,TITLE,CONTEXT,USER_NO,IDENTI_TYPE) 
VALUES(#{BOARD_NO},#{TITLE},#{CONTEXT},#{USER_NO},#{IDENTI_TYPE})
]]></insert>

<!-- 게시글 파일 업로드 -->
<insert id="insertFile" parameterType="hashmap">
<![CDATA[
INSERT INTO FILES (FILE_NO,BOARD_NO,ORIGINAL_FILE_NAME,FILE_SIZE,STORED_FILE_NAME)
VALUES(FILES_SEQ.NEXTVAL,#{BOARD_NO},#{ORIGINAL_FILE_NAME},#{FILE_SIZE},#{STORED_FILE_NAME})
]]>
</insert>
<!-- 게시글 파일리스트 -->
<select id="selectFileList" parameterType="hashmap"	resultType="hashmap"><![CDATA[
SELECT FILE_NO,ORIGINAL_FILE_NAME,ROUND(FILE_SIZE/1024,1) AS FILE_SIZE,STORED_FILE_NAME FROM FILES WHERE BOARD_NO = #{BOARD_NO}
]]></select>
<!-- 게시글 파일 다운로드 -->
<select id="downloadFile" parameterType="hashmap" resultType="hashmap"><![CDATA[
SELECT FILE_NO,ORIGINAL_FILE_NAME,FILE_SIZE,STORED_FILE_NAME FROM FILES WHERE FILE_NO = #{FILE_NO}
]]></select>

<!-- 기존 게시글 파일 수정 -->
<update id="updateFile" parameterType="hashmap"><![CDATA[
UPDATE FILES SET ORIGINAL_FILE_NAME = #{ORIGINAL_FILE_NAME},FILE_SIZE = #{FILE_SIZE},STORED_FILE_NAME = #{STORED_FILE_NAME} WHERE FILE_NO = #{FILE_NO}
]]></update>

<!-- 게시글 파일 삭제 -->
<delete id="deleteFileList" parameterType="hashmap"><![CDATA[
DELETE FROM FILES WHERE FILE_NO = #{DELETE_NO}
]]></delete>
<!-- <foreach collection="deleteMap" item="type"  open="(" close=")" separator=",">
            #{type.value}
</foreach> -->

<!-- 댓글 알림 -->
<update id="boardNotice" parameterType="hashmap"><![CDATA[
UPDATE BOARD SET BOARD_AR = 'Y' WHERE BOARD_NO = #{BOARD_NO}
]]></update>

	<!-- 댓글작성 -->
	<insert id="insertComment" parameterType="hashmap"><![CDATA[
INSERT INTO REPLY (RE_NO,BOARD_NO,USER_NO,CONTEXT,REF_NO)
	VALUES(REPLY_SEQ.NEXTVAL,#{BOARD_NO},#{USER_NO},#{CONTEXT},REPLY_SEQ.NEXTVAL)
	]]></insert>
	<!-- 대댓글 작성 -->
	<insert id="insertComment2" parameterType="hashmap"><![CDATA[
INSERT INTO REPLY (RE_NO,BOARD_NO,USER_NO,CONTEXT,REF_NO,REF_STEP)
	VALUES(REPLY_SEQ.NEXTVAL,#{BOARD_NO},#{USER_NO},#{CONTEXT},#{REF_NO},#{REF_STEP}+'1')
	]]></insert>

<!-- 댓글 삭제 -->
<update id="commentDelete" parameterType="hashmap"><![CDATA[
UPDATE REPLY SET DEL_GB = 'Y' WHERE RE_NO=#{RE_NO}
]]></update>
<!-- 댓글 추천 -->
<update id="recommandComment" parameterType="hashmap"><![CDATA[
UPDATE REPLY SET RECOMMAND_COUNT = RECOMMAND_COUNT + 1 WHERE REF_NO = #{REF_NO} AND REF_STEP = #{REF_STEP}
]]></update>
<!-- 인기 댓글 -->
<select id="bestComment" parameterType="hashmap" resultType="hashmap"><![CDATA[
SELECT A.*, ROWNUM
  FROM (SELECT REPLY.RE_NO,REPLY.RECOMMAND_COUNT,REPLY.USER_NO,USERS.NICK_NAME,REPLY.CONTEXT,TO_CHAR(REPLY.REPLY_DATE,'YY/MM/DD(hh24:MI)') "REPLY_DATE" 
      	  FROM REPLY 
      	 INNER JOIN USERS ON USERS.USER_NO = REPLY.USER_NO 
      	 WHERE REPLY.BOARD_NO = #{BOARD_NO}
       	   AND REPLY.RECOMMAND_COUNT = (SELECT MAX(RECOMMAND_COUNT) FROM REPLY WHERE BOARD_NO = #{BOARD_NO} AND RECOMMAND_COUNT != '0') 
       	 ORDER BY REPLY_DATE DESC) A
 WHERE ROWNUM = 1
]]></select>
<!-- 답글 리스트 -->
<select id="commentList" parameterType="hashmap" resultType="hashmap">
<include refid="common.pagingPre"/>
<![CDATA[
SELECT REPLY.RE_NO,REPLY.DEL_GB,REPLY.REF_NO,REPLY.RECOMMAND_COUNT,REPLY.REF_STEP,REPLY.USER_NO,USERS.NICK_NAME,REPLY.CONTEXT,TO_CHAR(REPLY.REPLY_DATE,'YY/MM/DD(hh24:MI)') "REPLY_DATE",ROWNUM FROM REPLY INNER JOIN USERS ON USERS.USER_NO = REPLY.USER_NO WHERE BOARD_NO = #{BOARD_NO} AND REPLY.DEL_GB = 'N' ORDER BY REF_NO DESC ,REF_STEP
]]>
<include refid="common.pagingPost"/>
</select>


<!-- 삭제글,신고글 상세보기 -->
<select id="selectAdminDetail" parameterType="hashmap" resultType="hashmap"><![CDATA[
SELECT BOARD.BOARD_NO,USERS.NICK_NAME,BOARD.TITLE,BOARD.USER_NO,BOARD.CONTEXT,TO_CHAR(BOARD.BOARD_DATE,'YY/MM/DD(hh24:MI)') "BOARD_DATE",BOARD.BOARD_NO,BOARD.READ_COUNT,BOARD.RECOMMEND_COUNT,BOARD.REPORT_COUNT FROM BOARD INNER JOIN USERS ON BOARD.USER_NO = USERS.USER_NO WHERE BOARD.BOARD_NO = #{BOARD_NO}
]]></select>

<!-- 스크랩 추가 -->
<insert id="insertScrap" parameterType="hashmap"><![CDATA[
INSERT INTO SCRAP VALUES(#{USER_NO},#{BOARD_NO})
]]></insert>

<!-- 스크랩 확인여부 -->
<select id="checkScrap" parameterType="hashmap" resultType="hashmap"><![CDATA[
SELECT USER_NO,BOARD_NO FROM SCRAP WHERE USER_NO = #{USER_NO} AND BOARD_NO = #{BOARD_NO}
]]></select>

<!-- 스크랩 취소 -->
<delete id="deleteScarp" parameterType="hashmap"><![CDATA[
DELETE FROM SCRAP WHERE USER_NO = #{USER_NO} AND BOARD_NO = #{BOARD_NO}
]]></delete>
</mapper>